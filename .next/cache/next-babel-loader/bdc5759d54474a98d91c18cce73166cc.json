{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/soap-website/frontend/context/CartContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useState, useEffect } from \"react\";\nexport var CartContext = /*#__PURE__*/createContext(null);\nexport var CartProvider = function CartProvider(props) {\n  _s();\n\n  var _useState = useState({\n    setItem: function setItem(item) {\n      setState(function (old) {\n        return _objectSpread(_objectSpread({}, old), {}, {\n          cartItems: [].concat(_toConsumableArray(old.cartItems), [item]),\n          cartItemsAmount: [].concat(_toConsumableArray(old.cartItemsAmount), [1])\n        });\n      });\n    },\n    removeItem: function removeItem(item) {\n      setState(function (old) {\n        return _objectSpread(_objectSpread({}, old), {}, {\n          cartItems: old.cartItems.filter(function (cartItem) {\n            return cartItem.name !== item.name;\n          }),\n          cartItemsAmount: old.cartItemsAmount.filter(function (cartItem, index) {\n            return index !== old.cartItems.findIndex(function (cartItem) {\n              return cartItem.name === item.name;\n            });\n          })\n        });\n      });\n    },\n    incrAmt: function incrAmt(item) {\n      setState(function (old) {\n        return _objectSpread({}, old);\n      });\n    },\n    cartItems: [],\n    cartItemsAmount: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    var cartItems = localStorage.getItem(\"cartItems\");\n    var cartItemsAmount = localStorage.getItem(\"cartItemsAmount\");\n\n    if (cartItems) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        cartItems: JSON.parse(cartItems),\n        cartItemsAmount: JSON.parse(cartItemsAmount)\n      }));\n    }\n  }, []);\n  useEffect(function () {\n    if (state.cartItems) {\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n      localStorage.setItem(\"cartItemsAmount\", JSON.stringify(state.cartItemsAmount));\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: state,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CartProvider, \"2XG3v+PHtVSCv9mU0pzCSaJYzGg=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/soap-website/frontend/context/CartContext.js"],"names":["React","createContext","useState","useEffect","CartContext","CartProvider","props","setItem","item","setState","old","cartItems","cartItemsAmount","removeItem","filter","cartItem","name","index","findIndex","incrAmt","state","localStorage","getItem","JSON","parse","stringify","children"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,IAAMC,WAAW,gBAAGH,aAAa,CAAC,IAAD,CAAjC;AAEP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACXJ,QAAQ,CAAC;AACjCK,IAAAA,OAAO,EAAE,iBAAUC,IAAV,EAAgB;AACvBC,MAAAA,QAAQ,CAAC,UAACC,GAAD;AAAA,+CACJA,GADI;AAEPC,UAAAA,SAAS,+BAAMD,GAAG,CAACC,SAAV,IAAqBH,IAArB,EAFF;AAGPI,UAAAA,eAAe,+BAAMF,GAAG,CAACE,eAAV,IAA2B,CAA3B;AAHR;AAAA,OAAD,CAAR;AAKD,KAPgC;AAQjCC,IAAAA,UAAU,EAAE,oBAAUL,IAAV,EAAgB;AAC1BC,MAAAA,QAAQ,CAAC,UAACC,GAAD;AAAA,+CACJA,GADI;AAEPC,UAAAA,SAAS,EAAED,GAAG,CAACC,SAAJ,CAAcG,MAAd,CACT,UAACC,QAAD;AAAA,mBAAcA,QAAQ,CAACC,IAAT,KAAkBR,IAAI,CAACQ,IAArC;AAAA,WADS,CAFJ;AAKPJ,UAAAA,eAAe,EAAEF,GAAG,CAACE,eAAJ,CAAoBE,MAApB,CACf,UAACC,QAAD,EAAWE,KAAX;AAAA,mBACEA,KAAK,KACLP,GAAG,CAACC,SAAJ,CAAcO,SAAd,CAAwB,UAACH,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,KAAkBR,IAAI,CAACQ,IAArC;AAAA,aAAxB,CAFF;AAAA,WADe;AALV;AAAA,OAAD,CAAR;AAWD,KApBgC;AAqBjCG,IAAAA,OAAO,EAAE,iBAAUX,IAAV,EAAgB;AACvBC,MAAAA,QAAQ,CAAC,UAACC,GAAD;AAAA,iCACJA,GADI;AAAA,OAAD,CAAR;AAGD,KAzBgC;AA0BjCC,IAAAA,SAAS,EAAE,EA1BsB;AA2BjCC,IAAAA,eAAe,EAAE;AA3BgB,GAAD,CADG;AAAA,MAC9BQ,KAD8B;AAAA,MACvBX,QADuB;;AA+BrCN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,SAAS,GAAGU,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACA,QAAMV,eAAe,GAAGS,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAxB;;AAEA,QAAIX,SAAJ,EAAe;AACbF,MAAAA,QAAQ,iCACHW,KADG;AAENT,QAAAA,SAAS,EAAEY,IAAI,CAACC,KAAL,CAAWb,SAAX,CAFL;AAGNC,QAAAA,eAAe,EAAEW,IAAI,CAACC,KAAL,CAAWZ,eAAX;AAHX,SAAR;AAKD;AACF,GAXQ,EAWN,EAXM,CAAT;AAaAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiB,KAAK,CAACT,SAAV,EAAqB;AACnBU,MAAAA,YAAY,CAACd,OAAb,CAAqB,WAArB,EAAkCgB,IAAI,CAACE,SAAL,CAAeL,KAAK,CAACT,SAArB,CAAlC;AACAU,MAAAA,YAAY,CAACd,OAAb,CACE,iBADF,EAEEgB,IAAI,CAACE,SAAL,CAAeL,KAAK,CAACR,eAArB,CAFF;AAID;AACF,GARQ,EAQN,CAACQ,KAAD,CARM,CAAT;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,KAA7B;AAAA,cAAqCd,KAAK,CAACoB;AAA3C;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAzDM;;GAAMrB,Y;;KAAAA,Y","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext(null);\n\nexport const CartProvider = (props) => {\n  const [state, setState] = useState({\n    setItem: function (item) {\n      setState((old) => ({\n        ...old,\n        cartItems: [...old.cartItems, item],\n        cartItemsAmount: [...old.cartItemsAmount, 1],\n      }));\n    },\n    removeItem: function (item) {\n      setState((old) => ({\n        ...old,\n        cartItems: old.cartItems.filter(\n          (cartItem) => cartItem.name !== item.name\n        ),\n        cartItemsAmount: old.cartItemsAmount.filter(\n          (cartItem, index) =>\n            index !==\n            old.cartItems.findIndex((cartItem) => cartItem.name === item.name)\n        ),\n      }));\n    },\n    incrAmt: function (item) {\n      setState((old) => ({\n        ...old,\n      }));\n    },\n    cartItems: [],\n    cartItemsAmount: [],\n  });\n\n  useEffect(() => {\n    const cartItems = localStorage.getItem(\"cartItems\");\n    const cartItemsAmount = localStorage.getItem(\"cartItemsAmount\");\n\n    if (cartItems) {\n      setState({\n        ...state,\n        cartItems: JSON.parse(cartItems),\n        cartItemsAmount: JSON.parse(cartItemsAmount),\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (state.cartItems) {\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n      localStorage.setItem(\n        \"cartItemsAmount\",\n        JSON.stringify(state.cartItemsAmount)\n      );\n    }\n  }, [state]);\n\n  return (\n    <CartContext.Provider value={state}>{props.children}</CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}