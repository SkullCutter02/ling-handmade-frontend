{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/soap-website/frontend/context/CartContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useState, useEffect } from \"react\";\nexport const CartContext = /*#__PURE__*/createContext(null);\nexport const CartProvider = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    setItem: async function (item) {\n      await setState(old => _objectSpread(_objectSpread({}, old), {}, {\n        cartItems: [...old.cartItems, item]\n      }));\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    removeItem: async function (item) {\n      const arr = state.cartItems.filter(cartItem => cartItem.name !== item.name);\n      await setState(old => _objectSpread(_objectSpread({}, old), {}, {\n        cartItems: arr\n      }));\n    },\n    cartItems: []\n  });\n  useEffect(() => {\n    const cartItems = localStorage.getItem(\"cartItems\");\n\n    if (cartItems) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        cartItems: JSON.parse(cartItems)\n      }));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: state,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/soap-website/frontend/context/CartContext.js"],"names":["React","createContext","useState","useEffect","CartContext","CartProvider","props","state","setState","setItem","item","old","cartItems","localStorage","JSON","stringify","removeItem","arr","filter","cartItem","name","getItem","parse","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,IAAD,CAAjC;AAEP,OAAO,MAAMI,YAAY,GAAIC,KAAD,IAAW;AACrC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC;AACjCO,IAAAA,OAAO,EAAE,gBAAgBC,IAAhB,EAAsB;AAC7B,YAAMF,QAAQ,CAAEG,GAAD,oCACVA,GADU;AAEbC,QAAAA,SAAS,EAAE,CAAC,GAAGD,GAAG,CAACC,SAAR,EAAmBF,IAAnB;AAFE,QAAD,CAAd;AAIAG,MAAAA,YAAY,CAACJ,OAAb,CAAqB,WAArB,EAAkCK,IAAI,CAACC,SAAL,CAAeR,KAAK,CAACK,SAArB,CAAlC;AACD,KAPgC;AAQjCI,IAAAA,UAAU,EAAE,gBAAgBN,IAAhB,EAAsB;AAChC,YAAMO,GAAG,GAAGV,KAAK,CAACK,SAAN,CAAgBM,MAAhB,CACTC,QAAD,IAAcA,QAAQ,CAACC,IAAT,KAAkBV,IAAI,CAACU,IAD3B,CAAZ;AAGA,YAAMZ,QAAQ,CAAEG,GAAD,oCAAeA,GAAf;AAAoBC,QAAAA,SAAS,EAAEK;AAA/B,QAAD,CAAd;AACD,KAbgC;AAcjCL,IAAAA,SAAS,EAAE;AAdsB,GAAD,CAAlC;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAGC,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAAlB;;AAEA,QAAIT,SAAJ,EAAe;AACbJ,MAAAA,QAAQ,iCACHD,KADG;AAENK,QAAAA,SAAS,EAAEE,IAAI,CAACQ,KAAL,CAAWV,SAAX;AAFL,SAAR;AAID;AACF,GATQ,EASN,EATM,CAAT;AAWA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEL,KAA7B;AAAA,cAAqCD,KAAK,CAACiB;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAhCM","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext(null);\n\nexport const CartProvider = (props) => {\n  const [state, setState] = useState({\n    setItem: async function (item) {\n      await setState((old) => ({\n        ...old,\n        cartItems: [...old.cartItems, item],\n      }));\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    },\n    removeItem: async function (item) {\n      const arr = state.cartItems.filter(\n        (cartItem) => cartItem.name !== item.name\n      );\n      await setState((old) => ({ ...old, cartItems: arr }));\n    },\n    cartItems: [],\n  });\n\n  useEffect(() => {\n    const cartItems = localStorage.getItem(\"cartItems\");\n\n    if (cartItems) {\n      setState({\n        ...state,\n        cartItems: JSON.parse(cartItems),\n      });\n    }\n  }, []);\n\n  return (\n    <CartContext.Provider value={state}>{props.children}</CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}