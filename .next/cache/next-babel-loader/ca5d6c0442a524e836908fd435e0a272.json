{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/skullcutter/WebStormProjects/soap-website/frontend/context/CartContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useState, useEffect } from \"react\";\nexport var CartContext = /*#__PURE__*/createContext(null);\nexport var CartProvider = function CartProvider(props) {\n  _s();\n\n  var _useState = useState({\n    setItems: function setItems(item) {\n      setState(function (old) {\n        return _objectSpread(_objectSpread({}, old), {}, {\n          cartItems: [].concat(_toConsumableArray(old.cartItems), [item])\n        });\n      });\n    },\n    cartItems: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    var cartItems = localStorage.getItem(\"cartItems\");\n\n    if (cartItems) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        cartItems: JSON.parse(cartItems)\n      }));\n    }\n\n    localStorage.removeItem(\"cartItems\");\n  }, []);\n  useEffect(function () {\n    if (state.cartItems) {\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: state,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CartProvider, \"yTimrM/ugH7hAAXeSNTDmw7swOs=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/skullcutter/WebStormProjects/soap-website/frontend/context/CartContext.js"],"names":["React","createContext","useState","useEffect","CartContext","CartProvider","props","setItems","item","setState","old","cartItems","state","localStorage","getItem","JSON","parse","removeItem","setItem","stringify","children"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,IAAMC,WAAW,gBAAGH,aAAa,CAAC,IAAD,CAAjC;AAEP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACXJ,QAAQ,CAAC;AACjCK,IAAAA,QAAQ,EAAE,kBAAUC,IAAV,EAAgB;AACxBC,MAAAA,QAAQ,CAAC,UAACC,GAAD;AAAA,+CAAeA,GAAf;AAAoBC,UAAAA,SAAS,+BAAMD,GAAG,CAACC,SAAV,IAAqBH,IAArB;AAA7B;AAAA,OAAD,CAAR;AACD,KAHgC;AAIjCG,IAAAA,SAAS,EAAE;AAJsB,GAAD,CADG;AAAA,MAC9BC,KAD8B;AAAA,MACvBH,QADuB;;AAQrCN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,SAAS,GAAGE,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;;AAEA,QAAIH,SAAJ,EAAe;AACbF,MAAAA,QAAQ,iCACHG,KADG;AAEND,QAAAA,SAAS,EAAEI,IAAI,CAACC,KAAL,CAAWL,SAAX;AAFL,SAAR;AAID;;AACDE,IAAAA,YAAY,CAACI,UAAb,CAAwB,WAAxB;AACD,GAVQ,EAUN,EAVM,CAAT;AAYAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,KAAK,CAACD,SAAV,EAAqB;AACnBE,MAAAA,YAAY,CAACK,OAAb,CAAqB,WAArB,EAAkCH,IAAI,CAACI,SAAL,CAAeP,KAAK,CAACD,SAArB,CAAlC;AACD;AACF,GAJQ,EAIN,CAACC,KAAD,CAJM,CAAT;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,KAA7B;AAAA,cAAqCN,KAAK,CAACc;AAA3C;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CA7BM;;GAAMf,Y;;KAAAA,Y","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext(null);\n\nexport const CartProvider = (props) => {\n  const [state, setState] = useState({\n    setItems: function (item) {\n      setState((old) => ({ ...old, cartItems: [...old.cartItems, item] }));\n    },\n    cartItems: [],\n  });\n\n  useEffect(() => {\n    const cartItems = localStorage.getItem(\"cartItems\");\n\n    if (cartItems) {\n      setState({\n        ...state,\n        cartItems: JSON.parse(cartItems),\n      });\n    }\n    localStorage.removeItem(\"cartItems\");\n  }, []);\n\n  useEffect(() => {\n    if (state.cartItems) {\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\n    }\n  }, [state]);\n\n  return (\n    <CartContext.Provider value={state}>{props.children}</CartContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}